delete from application;
delete from clientsponsor;
delete from client
Delete from featureexecution where Featureid<>'a';
Delete from feature where Featureid<>'a';
Delete from scenario where featureExecutionId <> 'F';
Delete from scenarioStep where scenarioExecutionId <> 'F';

select * from public.application

SELECT *
  FROM information_schema.columns
 WHERE table_schema = 'public'
   AND table_name   = 'client'
     ;

copy client from '/Users/UmeshJain/OneDrive - Info Origin Technologies Pvt Ltd/Desktop/client.csv' DELIMITER ',' 
CSV header QUOTE AS  '"' 

copy clientsponsor from 'D:/ExecutionReport/clientSponsor.csv' DELIMITER ';' 
CSV header QUOTE AS  '"' 

copy application from 'D:/ExecutionReport/application.csv' DELIMITER ';' 
CSV header QUOTE AS  '"' 


SELECT * FROM application
select * from client


select distinct ScenarioExecutionId,
       case when exists (select 1 from scenariostep t2 where t1.ScenarioExecutionId = T2.ScenarioExecutionId 
       and T2.status = 'failed'
       
       ) 
       then 'failed' else 'pass' end as Result
from scenariostep t1
where createdon >= '2023-07-08 12:39:39'


CREATE TABLE if not exists client (
  ClientId varchar(10) NOT NULL,
  ClientName varchar(50) NOT NULL,
  Description varchar(500) DEFAULT NULL,
  CreatedOn timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  CreatedBy varchar(50) DEFAULT NULL,
  PRIMARY KEY (ClientId)
);

CREATE TABLE clientsponsor (
  ClientId varchar(10) NOT NULL,
  SponsorId varchar(10) NOT NULL,
  SponsorName varchar(50) NOT NULL,
  Designation varchar(50) DEFAULT NULL,
  Department varchar(10) DEFAULT NULL,
  CreatedBy varchar(150) DEFAULT NULL,
  CreatedOn datetime DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (SponsorId),
  KEY FK_ClientSponsor_Client (ClientId),
  CONSTRAINT FK_ClientSponsor_Client FOREIGN KEY (ClientId) REFERENCES client (ClientId)
);

CREATE TABLE if not exists releases (
  ReleaseId varchar(10) NOT NULL,
  ApplicationId varchar(10) NOT NULL,
  Description varchar(50) DEFAULT NULL,
  GoLiveDate date NOT NULL,
  CreatedOn timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  CreatedBy varchar(50) DEFAULT NULL,
  PRIMARY KEY (ReleaseId, ApplicationId),
  CONSTRAINT FK_Releases_ApplicationId FOREIGN KEY (ApplicationId) REFERENCES application (applicationid)
);

CREATE TABLE if not exists ExecutionWay (
  ExecutionWayId varchar(10) NOT NULL,
  name varchar(50) DEFAULT 'Feature',
  TagName varchar(50) deafult null, 
  CreatedOn timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  CreatedBy varchar(50) DEFAULT NULL,
  PRIMARY KEY (ExecutionWayId)
  
);


CREATE INDEX FK_ClientSponsor_Client ON clientsponsor (ClientId);

CREATE TABLE if not exists application (
  SponsorId varchar(10) DEFAULT NULL,
  ApplicationId varchar(10) NOT NULL,
  ApplicationName varchar(50) NOT NULL,
  Description varchar(50) DEFAULT NULL,
  CreatedBy varchar(150) DEFAULT NULL,
  CreatedOn timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ApplicationId)
,
  CONSTRAINT FK_Application_ClientSponsor FOREIGN KEY (SponsorId) REFERENCES clientsponsor (SponsorId)
);

CREATE INDEX FK_Application_ClientSponsor ON application (SponsorId);

CREATE TABLE if not exists feature (
  ApplicationId varchar(10) NOT NULL,
  FeatureId varchar(10) NOT NULL,
  FeatureName varchar(150) DEFAULT NULL,
  Description varchar(250) DEFAULT NULL,
  Uri varchar(300) DEFAULT NULL,
  CreatedBy varchar(150) DEFAULT NULL,
  CreatedOn timestamp(2) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (FeatureId)
,
  CONSTRAINT FK_Feature_Application FOREIGN KEY (ApplicationId) REFERENCES application (ApplicationId)
);

CREATE INDEX FK_Feature_Application ON feature (ApplicationId);

CREATE TABLE if not exists featureexecution (
  FeatureExecutionId varchar(10) NOT NULL,
  FeatureId varchar(10) NOT NULL,
  TotalDuration decimal(18,2) NOT NULL,
  TotalScenario int NOT NULL,
  Failed int DEFAULT '0',
  Passed int DEFAULT '0',
  FailedDuration decimal(18,2) DEFAULT '0.00',
  PassedDuration decimal(18,2) DEFAULT '0.00',
  StartTime timestamp(0) NOT NULL,
  ReleaseId varchar(10) NULL,
  ExecutionWayId varchar(10) NULL,
  CreatedBy varchar(50) DEFAULT NULL,
  CreatedOn timestamp(2) NULL DEFAULT CURRENT_TIMESTAMP(2),
  PRIMARY KEY (FeatureExecutionId),
  CONSTRAINT FK_FeatureExecution_Feature FOREIGN KEY (FeatureId) REFERENCES feature (FeatureId),
  CONSTRAINT FK_FeatureExecution_ExecutionWayId FOREIGN KEY (ExecutionWayId) REFERENCES executionway (ExecutionWayId)
);



CREATE INDEX FK_FeatureExecution_Feature ON featureexecution (FeatureId);

CREATE TABLE if not exists scenario (
  ScenarioExecutionId varchar(10) NOT NULL,
  FeatureExecutionId varchar(10) DEFAULT NULL,
  ScenarioId varchar(50) NOT NULL,
  ScenarioName varchar(500) DEFAULT NULL,
  Description varchar(1200) DEFAULT NULL,
  Duration decimal(18,2) DEFAULT '0.00',
  Status varchar(15) DEFAULT 'Skipped',
  tags varchar(75) NULL,
  CreatedBy varchar(50) DEFAULT NULL,
  CreatedOn timestamp(2) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ScenarioExecutionId,ScenarioId)
);

CREATE TABLE if not exists scenariostep (
  ScenarioStepExecutionId varchar(10) NOT NULL,
  ScenarioExecutionId varchar(10) DEFAULT NULL,
  ScenarioId varchar(50) DEFAULT NULL,
  Keyword varchar(10) NOT NULL,
  Name varchar(500) NOT NULL,
  Duration decimal(18,2) NOT NULL DEFAULT '0.00',
  Status varchar(20) NOT NULL,
  ErrorMessage varchar(5750) DEFAULT NULL,
  CreatedBy varchar(150) NOT NULL,
  CreatedOn timestamp(3) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ScenarioStepExecutionId),
  CONSTRAINT scenariostep_chk_1 CHECK (((Keyword = 'And') or (Keyword = 'and') or (Keyword = 'Then') or (Keyword = 'Or') or (Keyword = 'When') or (Keyword = 'Before') or (Keyword = 'After') or (Keyword = 'before') or (Keyword = 'after') or (Keyword = 'Given'))),
  CONSTRAINT scenariostep_chk_2 CHECK (((Status = 'Skipped') or (Status = 'skipped') or (Status = 'Passed') or (Status = 'passed') or (Status = 'Failed') or (Status = 'failed')))
); 

INSERT INTO client (clientid,clientname,description,createdby) VALUES
	 ('C1','Swiss Re','','Info Origin'),
	 ('C2','Dell Computers','','Info Origin');

INSERT INTO releases
(releaseid, ApplicationId,description, Golivedate, createdon, createdby)VALUES
('R1', 'A1', 'Pom with feature F1', '2023-12-30', '2023-08-04 19:30:47.000', 'InfoOrigin'),
('R2', 'A1', 'Pom with feature F1', '2023-09-30', '2023-08-04 19:30:47.000', 'InfoOrigin'),
('R2', 'A2', 'Tandom with functionality', '2023-08-31', '2023-08-04 19:30:47.000', 'InfoOrigin');

INSERT INTO executionway
(executionwayid, "name", tagname, createdby)
values
('EW1', 'Feature','', 'infoorigin'),
('EW2', 'Sanity','', 'infoorigin'),
('EW3', 'Smoke','', 'infoorigin'),
('EW4', 'Regression','', 'infoorigin');


INSERT INTO clientsponsor (clientid,sponsorid,sponsorname,designation,department,createdby) VALUES
	 ('C1','S1','Pavitra','VP','Testing','Info Origin'),
	 ('C1','S2','John','VP','Testing','Info Origin'),
	 ('C1','S3','Smith','AVP','Testing','Info Origin');

INSERT INTO application (sponsorid,applicationid,applicationname,description,createdby) VALUES
	 ('S1','A1','POM','','Info Origin'),
	 ('S1','A2','Tandam','','Info Origin'),
	 ('S2','A3','MyExpense','','Info Origin'),
	 ('S3','A4','IOS','','Info Origin'),
	 ('S3','A5','DocGen 21','','Info Origin'),
	 ('S1','A6','Prolite','','Info Origin'),
	 ('S2','A7','MySpend','','Info Origin'),
	 ('S1','A8','Corso','','Info Origin');


